'use strict';(function(){const indexCfg=;indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/state-transition-models/decision-trees/','title':"Decision Trees",'content':" DECISION TREE PACKAGES Package: data.tree\nmaintained by: Christoph Glur (christoph.glur@ipub.com) (https://cran.r-project.org/web/packages/data.tree/vignettes/data.tree.html#introduction and https://cran.r-project.org/web/packages/data.tree/data.tree.pdf )\n  What does this package do? This package is used to create hierarchical structures through data.tree structures.\n How do I input my data to it/what inputs does it take? This package accepts inputs in a range of formats. Inputs can be from other tree packages (e.g. dendrogram, phylo from ape package and igraph trees). Additionally, data.frames can be used or the trees can be built programatically within the data.tree package. Data.tree can also use data saved in csv, yaml, json formats.\n What outputs do I get? The package produces a tree that you can navigate (‘climb’) and manipulate (e.g. ‘prune’ or ‘filter’) within R. data.tree can plot trees within its own package but can also use other packages to allow for styling of the tree. Other packages might be igraph, treeview, ape. Data from the data.tree can be saved as a data.tree type or as a data.frame and exported as csv, yaml, json\n Sample code library(treemap) data(GNI2014) treemap(GNI2014, index=c(\u0026quot;continent\u0026quot;, \u0026quot;iso3\u0026quot;), vSize=\u0026quot;population\u0026quot;, vColor=\u0026quot;GNI\u0026quot;, type=\u0026quot;value\u0026quot;)  library(data.tree) GNI2014$continent \u0026lt;- as.character(GNI2014$continent) GNI2014$pathString \u0026lt;- paste(\u0026quot;world\u0026quot;, GNI2014$continent, GNI2014$country, sep = \u0026quot;/\u0026quot;) tree \u0026lt;- as.Node(GNI2014[,]) print(tree, pruneMethod = \u0026quot;dist\u0026quot;, limit = 20) ## levelName ## 1 world ## 2 ¦--North America ## 3 ¦ ¦--Bermuda ## 4 ¦ ¦--United States ## 5 ¦ °--... 22 nodes w/ 0 sub ## 6 ¦--Europe ## 7 ¦ ¦--Norway ## 8 ¦ ¦--Switzerland ## 9 ¦ °--... 39 nodes w/ 0 sub ## 10 ¦--Asia ## 11 ¦ ¦--Qatar ## 12 ¦ ¦--Macao SAR, China ## 13 ¦ °--... 45 nodes w/ 0 sub ## 14 ¦--Oceania ## 15 ¦ ¦--Australia ## 16 ¦ ¦--New Zealand ## 17 ¦ °--... 11 nodes w/ 0 sub ## 18 ¦--South America ## 19 ¦ ¦--Uruguay ## 20 ¦ ¦--Chile ## 21 ¦ °--... 10 nodes w/ 0 sub ## 22 ¦--Seven seas (open ocean) ## 23 ¦ ¦--Seychelles ## 24 ¦ ¦--Mauritius ## 25 ¦ °--... 1 nodes w/ 0 sub ## 26 °--Africa ## 27 °--... 48 nodes w/ 0 sub (code example is from Christopher Glur’s https://cran.r-project.org/web/packages/data.tree/vignettes/applications.html#jenny-lind-decision-tree-plotting)   Other helpful resources This site has a range of examples of potential uses for the data.tree package ranging from financial applications to a genetic mutation algorithm (https://cran.r-project.org/web/packages/data.tree/vignettes/applications.html)\n Package: party\nmaintained by: Torsten Hothorn (Torsten.Hothorn@R-project.org)\n(https://cran.r-project.org/web/packages/party/index.html)\n  What does this package do? The core of the Party package is ctree(). Ctree() can be employed to build conditional inference trees. These trees use conditional inference procedures within their tree-structured regression models. Trees can be produced for nominal, ordinal, numeric and censored data, as well as multivariate response variables, and covariates with arbitrary measurement scales.\nThere is also a function called cforest(), which provides an implementation of Breiman’s random forests, based on conditional inference trees. In addition, the function mob() uses parametric models (e.g. linear models, GLMs or survival regression) with parameter instability tests for split selection. Finally, there are useful functions for visualizing trees. To learn more about what the function can do, check out the two comprehensive vignettes.\n How do I input my data to it/what inputs does it take? The input for mob is a dataframe.\n What outputs do I get? The output of mob is an object of class mob.\n Sample code  Other packages ###(not discussed in full) Party was updated in 2015 to the package Partykit, this includes a reimplementation of ctree() and an extended reimplementation of mob(), as well as a variety of other features (https://cran.r-project.org/web/packages/partykit/index.html and http://partykit.r-forge.r-project.org/partykit/).\n Other helpful resources Find out more about party at http://party.r-forge.r-project.org/.\nThere’s also a variety of online support available, for example: - https://rpubs.com/njvijay/14899 - https://www.tutorialspoint.com/r/r_decision_tree.htm - http://www.sthda.com/english/articles/35-statistical-machine-learning-essentials/141-cart-model-decision-tree-essentials/#loading-required-r-packages\n Package: rpart\nmaintained by: Beth Atkinson (atkinson@mayo.edu)\n(https://cran.r-project.org/web/packages/rpart/index.html))\n  What does this package do? This package performs recursive partitioning for classification, regression and survival trees. It implements the functionality in the 1984 book by Breiman, Friedman, Olshen and Stone, Classification and Regression Trees. The package also includes several example sets of data with a long, but clear, vignette.\nRpart or party?\nRpart produces classification and regression trees with cross-validation-based cost-complexity pruning. By contrast, Party produces conditional inference trees based on unbiased recursive partitioning achieved via permutation tests. As a result, RPart is sometimes seen as easier to explain and use for beginners, but Party appears to give greater accuracy and performance.\n How do I input my data to it/what inputs does it take? The input for rpart function in the package is a dataframe or formula.\n What outputs do I get? The rpart function outputs an rpart.object\n Sample code ##Other helpful resources\nAs this is a popular package there is lots of online support, for example:\n https://eight2late.wordpress.com/2016/02/16/a-gentle-introduction-to-decision-trees-using-r/ https://www.r-bloggers.com/classification-trees-using-the-rpart-function/ https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/ https://freakonometrics.hypotheses.org/tag/rpart   Other packages to explore but not detailed here: Make decision trees or networks  Package: igraph maintained by Gábor Csárdi csardi.gabor@gmail.com (https://cran.r-project.org/web/packages/igraph/igraph.pdf)\n Package: tree maintained by Brian Ripley ripley@stats.ox.ac.uk (https://cran.r-project.org/web/packages/tree/index.html)\n Package: RWeka maintained by Kurt Hornik Kurt.Hornik@R-project.org (https://cran.r-project.org/web/packages/RWeka/index.html)\n Package: dtree maintained by Ross Jacobucci rcjacobuc@gmail.com (https://cran.r-project.org/web/packages/dtree/index.html)\n Package: evtree maintained by Thomas Grubinger ThomasGrubinger@gmail.com (https://cran.r-project.org/web/packages/evtree/)\n Package: FFtrees maintained by Nathaniel Phillips Nathaniel.D.Phillips.is@gmail.com (https://cran.rstudio.com/web/packages/FFTrees/index.html)\n Package: C50 maintained by Max Kuhn mxkuhn@gmail.com (https://cran.r-project.org/web/packages/C50/index.html)\n Package: cat.dt maintained by Javier Rodriguez-Cuadrado javierro@est-econ.uc3m.es (https://cran.r-project.org/web/packages/cat.dt/index.html)\n Package: MplusTrees maintained by Safaraz serang sarfaraz.serang@usu.edu\n(https://cran.r-project.org/web/packages/MplusTrees/index.html)\n   Improving presentation of hierarchical clustering, and classification and regression trees  Package: maptree maintained by Robert B. Gramacy rbgramacy@chicagobooth.edu\n(https://cran.r-project.org/web/packages/maptree/maptree.pdf)   Convert JSON objects to R  Package: jsonlite maintained by Jeroen Ooms jeroen@berkeley.edu (https://cran.r-project.org/web/packages/jsonlite/index.html)\n Package: rjson maintained by Alex Couture-Beil rjson_pkg@mofo.ca (https://cran.r-project.org/web/packages/rjson/rjson.pdf)\n   Validate JSON objects  Package: jsonvalidate maintained by Rich FitzJohn rich.fitzjohn@gmail.com (https://cran.r-project.org/web/packages/jsonvalidate/jsonvalidate.pdf)     "});index.add({'id':1,'href':'/docs/state-transition-models/markov-models/','title':"Markov Models",'content':" Markov Models Package: heemod\nmaintained by: Kevin Zarca kevin.zarca@gmail.com ( https://cran.r-project.org/web/packages/heemod/heemod.pdf and https://cran.r-project.org/web/packages/heemod/index.html)\nWhat does this package do? It constructs and runs Markov models for the purpose of health economic decision analysis.\nIt also has useful functions that could be used outside of a different Markov model framework. Such as Nb also has useful functions like rate_to_prob() and or_to_prob(or, p) that convert rates and odds ratios into transition probabilities. This package seems useful for when there are the same states across the strategy comparators.\nFurther functionality was not explored currently within this exercise. However, the package description also states the package allows for deterministic and probabilistic sensitivity analysis, heterogeneity analysis, time dependency on state-time and model-time (semi-Markov and non-homogeneous Markov models).\nHow do I input my data to it/what inputs does it take? Users directly input values into vectors that are run through different functions\nWhat outputs do I get? In terms of cost-effectiveness analysis, run_model() gives you an R object which includes outputs like a data.frame showing expected value costs and effects for each strategy\nSample code Other helpful resources  Vignettes for this package were found at:\nhttps://cran.r-project.org/web/packages/heemod/vignettes/a_introduction.html Markov Models for Health Economic Evaluations: The R Package heemod Antoine Filipovi´c-Pierucci, Kevin Zarca and Isabelle Durand-Zaleski (2017). (https://arxiv.org/pdf/1702.03252.pdf )  Other packages to explore but not detailed here:  DARTH : have information on github but nothing on CRAN at present.\nThe packages include: -Darthpack (https://darth-git.github.io/darthpack/) -dampack (https://github.com/DARTH-git/dampack) mstate (https://cran.r-project.org/web/packages/mstate/index.html)  "});index.add({'id':2,'href':'/docs/sensitivity-analyses-and-value-of-information/','title':"Sensitivity Analyses and Value of Information",'content':" Sensitivity Analyses and Value of Information Models are used to inform decision making and resource allocation in health care, therefore, it is important that they report point estimates for specific outcomes as well as the uncertainty surrounding these outcomes. Modellers can perform sensitivity analyses (deterministic (DSA) or probabilistic (PSA)) to report on the uncertainty of their models’ outcomes, or value of information analysis (VOI) to assess the expected gain from reducing uncertainty through some form of data collection (trial, epidemiological study, etc.). More information on parameter estimation, uncertainty, sensitivity anlyses, VOIs can be found in the following publications:\nhttps://www.ispor.org/docs/default-source/resources/outcomes-research-guidelines-index/model_parameter_estimation_and_uncertainty-6.pdf?sfvrsn=8bc10c8e_0 https://link.springer.com/article/10.1007/s40273-014-0219-x  Useful examples of R sources which can be used to perform sensitivity analyses and VOI can be found here:\nSAVI - Sheffield Accelerated Value of Information SAVI can be used to evaluate uncertainty in a standardised manner (C-E (cost-effectiveness) planes, cost-effectiveness acceptability curves (CEACs), as well as assess the expected value of perfect information (EVPI) and expected value of perfect parameter information (EVPPI) Webpage: http://savi.shef.ac.uk/SAVI/ GitHub: https://github.com/Sheffield-Accelerated-VoI/SAVI\n RANE - Rapid Assessment of Need for Evidence RANE is a tool which can be used to estimate the value of research proposals. Webpage: https://shiny.york.ac.uk/rane/ GitHub: https://github.com/david-glynn https://github.com/david-glynn/OpenVOIdemo.v.0.1\n   "});index.add({'id':3,'href':'/docs/state-transition-models/','title':"State Transition Models",'content':" State Transmission Models "});index.add({'id':4,'href':'/categories/','title':"Categories",'content':""});index.add({'id':5,'href':'/docs/sensitivity-analyses-and-value-of-information/deterministic-sensitivity-analysis/','title':"DETERMINISTIC SENSITIVITY ANALYSIS",'content':" DSA - https://cran.r-project.org/web/packages/heemod/vignettes/f_sensitivity.html Shows how to do DSA with heemod package Using functions like define_dsa() and run_dsa() Can plot a tornado diagram using plot() and your dsa output\n "});index.add({'id':6,'href':'/docs/discrete-event-simulation/','title':"Discrete Event Simulation",'content':" Discrete Event Simulation  UNDER CONSTRUCTION - NO PACKAGES YET INVESTIGATED  "});index.add({'id':7,'href':'/docs/','title':"Docs",'content':""});index.add({'id':8,'href':'/docs/dynamic-transmission-models/','title':"Dynamic Transmission Models",'content':" Discrete Event Simulation #UNDER CONSTRUCTION - NO PACKAGES YET INVESTIGATED\n"});index.add({'id':9,'href':'/','title':"Introduction",'content':" Signposting Health Economic Packages in R for Decision Modelling  This webpage aims to help you navigate you through the forest of R packages and signpost you to the most appropriate one, given your intended health economic analysis. This decision tree-style compendium was written over 2 days as part of a R Hackathon (6th - 7th November 2019).\nCreators and current contributors are: @nichola_naylor, @collepto1, @RositsaKolarova, @kd_katdavis, @alexhillphd, Arthi Roopan, and Monique Tan\nOther work compiling packages that were used/viewed or could be useful in the future are:  For a list of packages: https://github.com/n8thangreen/health_economics_R_packages\n For an overview of utilised packages by type: Jalal, H., Pechlivanoglou, P., Krijkamp, E., Alarid-Escudero, F., Enns, E. and Hunink, M.M., 2017. An overview of R in health decision sciences. Medical decision making, 37(7), pp.735-746.\n For a comparison of mstate vs hesim vs heemod: Incerti D and Jansen, A COMPARISON OF R PACKAGES FOR PREDICTION AND SIMULATION OF MULTI-STATE MODELS FOR COSTEFFECTIVENESS ANALYSIS. Value in Health (2019) https://www.valueinhealthjournal.com/article/S1098-3015(19)31764-4/pdf\n   "});index.add({'id':10,'href':'/docs/state-transition-models/microsimulation/','title':"Microsimulation Modelling Packages Available on CRAN",'content':" 1. gems Package: gems – Generalized Multistate Simulation Model\nMaintained By: Luisa Salazar Vizcaya \u0026lt;luisapaola.salazarvizcaya at insel.ch\u0026gt; Reference Manual on CRAN – https://cran.r-project.org/web/packages/gems/gems.pdf\nDescription: Simulate and analyze models with general hazard functions. - Multistate model is not required to be a Markov model - However, the package only considers multistate models without loops. I.e. Models which can be written as directed acyclic graphs. - Model includes parameter uncertainty - Simulate disease progression in patients and predicts the effect of different interventions on patient outcome. - Disease progression is represented by a series of events (e.g., diagnosis, treatment and death), displayed in a directed acyclic graph - Vertices correspond to disease states and the directed edges represent events. - However, applications are not limited to the medical field and can extend to other domains where multistate simulation is of interest. - 3 classes to encode all model inputs and outputs - 6 main functions; 3 to specify the model, 1 for simulation; 2 to summarize results\nInputs/Outputs/Sample Code: (extracted verbatim from the Vignette) Load Package: install.packages(“gems”)\nClasses: transition.structure contains the number of model states and a matrix with elements that are used to specify transition-specific hazard functions, their parameters and covariances\nArtCohort contains all aspects of the simulated cohort, including the model input and a data.frame with the entry times for each patient into each of the states.\nPosteriorProbabilities contain the transition probabilities or cumulative incidence that can be calculated from the ArtCohort.\nFunctions: generateHazardMatrix creates a template of class transition.structure that can be used to specify the transition-specific hazard functions.\ngenerateParameterMatrix creates a template of class transition.structure that can be used to specify the parameters.\ngenerateParameterCovarianceMatrix creates a transition.structure that can be used to specify the parameter covariance. simulateCohort simulates the specified artificial cohort and returns an object of class ArtCohort.\ntransitionProbabilities returns an object of class posteriorProbabilities that contains the transition probabilities from the initial state over time.\ncumulativeIncidence returns an object of class posteriorProbabilities that contains the cumulative incidence over time.\nAdditional Resources: 1. Vignette – https://rdrr.io/cran/gems/f/inst/doc/gems.pdf - Blaser N, Vizcaya LS, Estill J, et al. gems: An R Package for Simulating from Disease Progression Models. J Stat Softw 2015; 64(10): 1-22\nMicrosimulation Modelling Tutorial in R   Krijkam EM, Alarid-Escudero F, Enns EA, et al. Microsimulation Modeling for Health Decision Sciences Using R: A Tutorial. Medical Decision Making 2018; 38(3): 400-422   2. MicSim Package: MicSim – Performing Continuous-Time Microsimulation\nMaintained By: Sabine Zinn \u0026lt; szinn at diw.de\u0026gt; Reference Manual on CRAN – https://cran.r-project.org/web/packages/MicSim/MicSim.pdf\nDescription: Perform continuous-time microsimulation for a wide range of demographic applications. (Individual life-courses are specified by a continuous-time multi-state model). - Package uses non-homogeneous continuous-time Markov chains to describe individual life-courses.\nInputs/ Outputs/ Sample Code: Load Package: install.packages(“MicSim”)\nFunctions: buildTransitionMatrix supports the constructing of the ‘transition matrix’, which determines the transition pattern of the microsimulation model. The actual microsimulation is performed by micSim (sequentially) or by micSimParallel (parallel computing).\nconvertToLongFormat function reshapes the output given by micSim or by micSimParallel into long format. In long format, the data comprises for each episode which an individual experiences one row.\nconvertToWideFormat reshapes the output given by micSim or by micSimParallel into wide format. In wide format, the data comprises for each episode which an individual experiences additional column entries.\nmicSim performs a continuous-time microsimulation run (sequentially, i.e., using only one CPU core).\nmicSimParallel is a parallelized version of the function micSim. That is, it runs a continuous-time microsimulation simulation distributed, i.e., using more than one CPU core.\nsetSimHorizon sets the simulation horizon of the microsimulation. The actual microsimulation is performed by micSim (sequentially) or by micSimParallel (parallel computing).\nAdditional Resources: 1.) Vignette not available on CRAN 2.) MicSim Package Toolkit · Zinn, Sabine. (2014). The MicSim Package of R: An Entry-Level Toolkit for Continuous-Time Microsimulation. International Journal of Microsimulation. 7(3): 3-32. 3.) Microsimulation Modelling Tutorial in R · Krijkam EM, Alarid-Escudero F, Enns EA, et al. (2018). Microsimulation Modeling for Health Decision Sciences Using R: A Tutorial. Medical Decision Making 2018; 38(3): 400-422\nMILC Package: MILC – Microsimulation Lung Cancer (MILC) model\nMaintained By: Stavroula A. Chrysanthopoulou Stavroula_Chrysanthopoulou@brown.edu Reference Manual on CRAN – https://cran.r-project.org/web/packages/MILC/MILC.pdf\nDescription: Predict individual trajectories using the continuous time microsimulation model MILC, that describes the natural history of lung cancer. - Dynamic, continuous time microsimulation model that describes the natural history of lung cancer in the absence of any screening or treatment components. - Model accounts for age, gender, and smoking history, including smoking status, start and quit smoking ages, and average number of cigarettes smoked per day when relevant. - Model comprises four main components: onset of the first malignant cell, tumor growth, disease progression, survival.\nInputs/Outputs/Sample Code: Load Package: install.packages(“MILC”)\nFunctions: age_grp returns the 5-year age group (“\u0026lt;40”, “40-44”,…,or “85+”) to which an individual belongs.\nci.lung estimates cumulative incidence for lung cancer mortality by age (5-years age group), gender (“male” or “female”) and tumor stage at diagnosis (i.e., “localized”, “regional”, or “distant”).\ncurrent.other estimates cumulative incidence for other cause (not lung cancer) mortality, for current smokers by age (5-years age group), gender (“male” or “female”) and smoking intensity group (“1-10”, “11-20”, or “21+” cigarettes) based on the average number of cigarettes smoked per day.\nd_grp returns the smoking intensity group (“1-10”, “11-20”, or “21+” cigarettes) of an individual based on the average number of smoked per day\nformer.other estimates cumulative incidence for other cause (not lung cancer) mortality, for former smokers by age (5-years age group), gender (“male” or “female”) and smoking intensity group (“1-10”, “11-20”, or “21+” cigarettes) based on the average number of cigarettes smoked per day.\nHT_mal estimates cumulative hazard up to age t for the onset of first malignant cell, given gender, smoking status and smoking intensity.\nht_mal_int estimates cumulative hazard for the onset of the first malignant cell between two time points (ages).\nnat_hist runs the MILC model and predicts a full lung cancer trajectory depending on the age, gender and smoking history of an individual.\nnever.other estimates the cumulative incidence for other cause (not lung cancer) mortality, for non smokers by age (5-years age group), and gender (“male” or “female”).\ntdeath_lung predicts the age (years) at which a person may die of lung cancer given gender, age and tumor stage at diagnosis.\ntdeath_other predicts the age (years) at which a person may die from a cause other than lung cancer given age, gender and smoking intensity, when relevant.\nt_mal predicts the age at the onset of the first malignant given gender and smoking history, when relevant.\nt_prog simulates the time points (years) from the onset of the first malignant cell to major states in the natural history of lung cancer, i.e., the time at the beginning of the regional (Treg), and distant (Tdist) stage, and time at diagnosis (Tdiagn). t_vol predicts the time (years) at which tumor has reached volume V from the onset of the first malignant cell.\nAdditional Resources: 1.) Vignette not available on CRAN 2.) Microsimulation Modelling Tutorial in R · Krijkam EM, Alarid-Escudero F, Enns EA, et al. (2018). Microsimulation Modeling for Health Decision Sciences Using R: A Tutorial. Medical Decision Making 2018; 38(3): 400-422\nHesim Package: hesim - Health Economic Simulation Modeling and Decision Analysis Reference Manual on CRAN –\nMaintained By: Devin Incerti \u0026lt;devin.incerti @gmail.com\u0026gt; Description: Parametrize, simulate, and analyze health-economic simulation models. - Supports N-state partitioned survival models and continuous time state transition models parametrized using survival or multi-state modelling. Note information taken from these sources (Accessed 07/11/2019): CRAN index: https://cran.r-project.org/web/packages/hesim/index.html Manual: https://cran.r-project.org/web/packages/hesim/hesim.pdf Authors: Devin Incerti and Jeroen P. Jansen Cited vignettes: https://cran.r-project.org/web/packages/hesim/vignettes/intro.html This package can be used to simulate disease progression amongst a cohort of patients. It can also parameterise a decision model, using the simulated disease progression model and inputs related to patient cost and treatment effect. For references of these approaches please see “Description” within the package manual. There are two different approaches for individual-level and cohort models. The package can simulate a group of individual patients (i.e. a patient id for each patient). Users can incorporate survival models or multistate models into your disease progression modelling. This package seems useful if you have datasets on epidemiological and cost data as you can integrate data analyses (such as survival analysis for disease progression and regression analyses for costs) with health economic decision analysis. However, you can also just state the input parameter distribution values you want to use. How do I input my data to it/what inputs does it take?: hesim_data object with the function hesim_data() - based off of data.table There is code to do this in the vignette. [https://cran.r-project.org/web/packages/hesim/vignettes/intro.html ] After doing this you end up with the following data.table input (taken vignette linked above): *$strategies ## strategy_id ## 1: 1 ## 2: 2 ## ## $patients ## patient_id age female ## 1: 1 39.24173 0 ## 2: 2 41.72205 1 ## 3: 3 46.75134 0 ## 4: 4 38.41198 1 ## 5: 5 44.70204 0 ## —\n## 996: 996 52.78174 0 ## 997: 997 52.45926 0 ## 998: 998 44.04488 1 ## 999: 999 46.42657 0 ## 1000: 1000 39.03964 1 ## ## $states ## state_id state_name ## 1: 1 Healthy ## 2: 2 Sick ## ## $transitions ## transition_id from to from_name to_name trans ## 1: 1 1 2 Healthy Sick 1 ## 2: 2 1 3 Healthy Dead 2 ## 3: 3 2 1 Sick Healthy 3 ## 4: 4 2 3 Sick Dead 4 ## ## attr(,“class”)\nAn example of the layout for the cost and QALY inputs (with it being QALYs in this particular example) taken from the vignette (same link as above):\nsample strategy_id state_id dr qalys lys ## 1: 1 1 1 0.03 8.653024 10.350427 ## 2: 1 1 2 0.03 1.855214 2.075266 ## 3: 1 2 1 0.03 8.756579 10.474295\nWhat outputs do I get?: An object with (non-exclusively) : \u0026gt; icea_pw$summary strategy_id grp ie_mean ie_lower ie_upper ic_mean ic_lower ic_upper 1: 2 1 0.1581546 -1.126363 1.642161 58537.23 41765.56 76749.95 icer 1: 370126.5\nSample code section: See Vignette - https://cran.r-project.org/web/packages/hesim/vignettes/intro.html\nAdditional Resources: 1.) Vignette - https://cran.r-project.org/web/packages/hesim/vignettes/ctstm.html 2.) Vignette - https://cran.r-project.org/web/packages/hesim/vignettes/icea.html 3.) Vignette - https://cran.r-project.org/web/packages/hesim/vignettes/intro.html 4.) Vignette - https://cran.r-project.org/web/packages/hesim/vignettes/psm.html 5.) Microsimulation Modelling Tutorial in R · Krijkam EM, Alarid-Escudero F, Enns EA, et al. (2018). Microsimulation Modeling for Health Decision Sciences Using R: A Tutorial. Medical Decision Making 2018; 38(3): 400-422\nAdditional Microsimulation Packages Found Online (GitHub):\n1.) simario Package: simario\nDeveloped By: COMPASS Research Centre, Faculty of Arts, University of Auckland Found Here: https://github.com/compassresearchcentre/simario\nDescription: Provide a flexible framework of functions for creating a discrete-time dynamic microsimulation\nInputs/ Outputs/ Sample Code: Load Package: install.packages(“devtools”) install.packages(“roxygen2”) library(devtools) rmall() document(“simario”, clean=T) document(“simario”) as.package(“simario”) check(“simario”) has_devel()\nFor further examples of code see: https://github.com/compassresearchcentre/simario/blob/master/simario%20scrap.r\nAdditional Resources: 1.) Slide Deck from COMPASS detailing the package: https://cdn.auckland.ac.nz/assets/auckland/arts/our-research/research-institutes-centres-groups/compass/microsimulation/simario-r-for-dynamic-microsimulation.pdf\n2.) microsimulation Package: microsimulation\nDeveloped By: mclements Found Here: https://github.com/mclements/microsimulation\nDescription: Provides several approaches for microsimulation and event-based, discrete event simulation\nInputs/ Outputs/ Sample Code: Load Package: install.packages(“BH”) install.packages(“Rcpp”) install.packages(“devtools”) require(devtools) install_github(“mclements/microsimulation”)\nFor further examples of code see: ‘Simple Examples’ https://github.com/mclements/microsimulation\nSpatial Microsimulation Packages Available on CRAN:\nrakeR: Easy Spatial Microsimulation (Raking) in R - Description: Functions for performing spatial microsimulation (‘raking’) - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.rstudio.com/web/packages/rakeR/rakeR.pdf o 8 documented functions\nsms: Spatial Microsimulation - Description: Produce small area population estimates by fitting census data to survey data. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/sms/sms.pdf o 21 documented functions - Alternative resource – published paper on the package: Kavroudakis D. sms: An R Package for the Construction of Microdata for Geographical Analysis. Journal of Statistical Software. 2015. DOI: 10.18637/jss.v068.i02\nsynthACS: Synthetic Microdata and Spatial MicroSimulation Modeling for ACS Data - Description: Builds synthetic micro-datasets based on American Community Survey (ACS) base tables, (at any user-specified geographic level). - Vignette: https://cran.r-project.org/web/packages/synthACS/vignettes/jss_synthACS.pdf o Provides access to curated American Community Survey (ACS) base tables via a wrapper to library(acs). o Conducts spatial microsimulation modeling (SMSM) via simulated annealing. o SMSM is conducted in parallel by default. o Functionality for data-extensibility of micro-datasets. 57 documented functions\nAdditional Simulation Packages Reviewed:\ngenSurv: ‘Generating Multi-State Survival Data’ - Description: Generates data with one binary time-dependent covariate and data stemming from a progressive illness-death model. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/genSurv/genSurv.pdf o 7 documented functions\nPermAlgo: ‘Permutational Algorithm to Simulate Survival Data’ - Description: Generates a dataset in which event and censoring times are conditional on an user-specified list of covariates, some or all of which are time-dependent. Event times and censoring times also follow user-specified distributions - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/PermAlgo/PermAlgo.pdf o Only one documented function: permalgorithm (A one-to-one matching of n observed times with n independently generated vectors of covariates values.) The matching is performed based on a permutation probability law derived from the partial likelihood of Cox’s Proportional Hazards (PH) model.\nprodlim: ‘Product-Limit Estimation for Censored Event History Analysis - Description: Implementation of nonparametric estimators for survival analysis using the Kaplan Meier and Aalen-Johansen method. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/prodlim/prodlim.pdf o 39 documented functions\nsimMSM: Simulation of Event Histories for Multi-State Models - Description: Simulation of event histories with possibly non-linear baseline hazard rate functions, non-linear (time-varying) covariate effect functions, and dependencies on the past of the history. Random generation of event histories is performed using inversion sampling on the cumulative all-cause hazard rate functions. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/simMSM/simMSM.pdf o 7 documented functions\nsimPH: Tools for Simulation and Plotting Quantities of Interest Estimated from Coz Proportional Hazard Models - Description: Simulates and plots quantities of interest (relative hazards, first differences, and hazard ratios) for linear coefficients, multiplicative interactions, polynomials, penalised splines, and non-proportional hazards, as well as stratified survival curves from Cox Proportional Hazard models. It also simulates and plots marginal effects for multiplicative interactions. - Vignette: https://cran.r-project.org/web/packages/simPH/vignettes/simPH-overview.pdf o Used in order to effectively communicate results fro the Cox PH models, including models with interactive and nonlinear effects. o Tool for examining event data. o The package makes it easy to simulate and then plot quantities of interest for a variety of effects estimated from Cox PH models including interactive effects, nonlinear effects, as well as ‘vanilla’ linear effects. o The package employs visual weighting in order to effectively communicate estimation uncertainty. o Hypothetical and empirical examples used to demonstrate package’s syntax and capabilities. (21 documented functions)\nsurvsim: Simulation of Simple and Complex Survival Data - Description: Simulation of simple and complex survival data including recurrent and multiple events and competing risks. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/survsim/survsim.pdf o 5 documented functions - Alternative resource – published paper on the package: Morina D, Navarro A. The R Package survism for the Simulation of Simple and Complex Survival Data. Journal of Statistical Software. 2014. DOI: 10.18637/jss.v059.i02\nsimsurv: Simulate Survival Data - Description: Simulate survival times from standard parametric survival distributions (exponential, Weibull, Gompertz), 2-component mixture distributions, or a user-defined hazard, log hazard, cumulative hazard, or log cumulative hazard function. - Vignette (technical background): https://cran.r-project.org/web/packages/simsurv/vignettes/simsurv_usage.html o Baseline covariates can be included under a proportional hazards assumption. o Time dependent effects (i.e. non-proportional hazards) can be included by interacting covariates with linear time or a user-defined function of time. (Clustered event times are also accommodated.) o The 2-component mixture distributions can allow for a variety of flexible baseline hazard functions reflecting those seen in practice. o If the user wishes to provide a user-defined hazard or log hazard function then this is possible, and the resulting cumulative hazard function does not need to have a closed-form solution. 2 documented functions\nSimHaz: Simulated Survival Hazard Analysis for Time-Dependent Exposure - Description: Generate power for the Cox proportion hazards model by simulation survival events data with time dependent exposure status for subjects. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/SimHaz/SimHaz.pdf o 8 documented functions\nSimSCRPiecewise: Simulates Univariate and Semi-Competing Risks Data Given Covariates and Piecewise Exponential Baseline Hazards - Description: Simulate survival data from piecewise exponential hazards with a proportional hazards adjustment for covariates. - Vignette not available: no comprehensive overview of the package - Reference Manual: https://cran.r-project.org/web/packages/SimSCRPiecewise/SimSCRPiecewise.pdf o 2 documented functions: SimUNIVPiecewise simulates univariate survival data based on a piecewise exponential hazard, covariate matrix and true regression vector. SimSCRPiecewise simulates semicompeting risks data based on three piecewise exponential hazards, three true regression vectors and three matrices of patient covariates (which can be different or the same).\n "});index.add({'id':11,'href':'/docs/parameter-estimation-and-uncertainty/','title':"Parameter Estimation and Uncertainty",'content':""});index.add({'id':12,'href':'/docs/sensitivity-analyses-and-value-of-information/probabilistic-sensitivity-analysis/','title':"PROBABILISTIC SENSITIVITY ANALYSIS",'content':" Probabilistic sensitivity analysis Package: BCEA Maintained by Gianluca Baio gianluca@stats.ucl.ac.uk\nNote information taken from these sources (Accessed 07/11/2019):\nCRAN index: https://cran.r-project.org/web/packages/hesim/index.html\nManual:https://cran.r-project.org/web/packages/BCEA/BCEA.pdf\nAuthors: Gianluca Baio, Andrea Berardi, Anna Heath\nGian Luca’s website - http://www.statistica.it/gianluca/software/bcea/\n  What does this package do? This package is useful for running probabilistic sensitivity analysis (PSA). Note that this package does not produce or run a base-analysis model, it is useful for post-processing the output (e.g. plotting PSA results.\nOther functionality was not explored as part of this exercise.\n How do I input my data to it/what inputs does it take? Taken from manual and example on page 11 [https://cran.r-project.org/web/packages/BCEA/BCEA.pdf]\nbcea(e, c, ref = 1, interventions = NULL, Kmax = 50000, wtp = NULL, plot = FALSE) where is states e An object containing nsim simulations for the variable of clinical effectiveness for each intervention being considered. In general it is a matrix with nsim rows and nint columns. c An object containing nsim simulations for the variable of cost for each intervention being considered. In general it is a matrix with nsim rows and nint columns. # effectiveness and cost ref=2, # selects the 2nd row of (e,c) # as containing the reference intervention interventions=treats, # defines the labels to be associated # with each intervention Kmax=50000, # maximum value possible for the willingness # to pay threshold; implies that k is chosen # in a grid from the interval (0,Kmax) plot=TRUE # plots the results ) Inputs structure- e Status Quo Vaccination [1,] -0.0010466668 -0.0008986026 [2,] -0.0008836105 -0.0007320416 c Status Quo Vaccination [1,] 10.409146 16.252537 [2,] 5.834875 9.373437 - The main use for “standard” models is for PSA plots \u0026amp; analysis of PSA results where e and c rows represent the expected outcomes and costs from your PSA model runs e.g. - e - Status Quo Vaccination - [1,] [E(QALY) PSA outpu1] [E(QALY) PSA output 1] - [2,] [PSA output2] [PSA output 2] - c - Status Quo Vaccination - [1,] [E(cost) PSA outpu1] [E(cost)PSA output 1] - [2,] [PSA output2] [PSA output 2]   What outputs do I get? Taken from BCEA mannual - https://cran.r-project.org/web/packages/BCEA/BCEA.pdf The output is a bcea item which is an R object containing many values including N.sim - Number of simulations produced by the Bayesian model N.comparators - Number of interventions being analysed n.comparisons- Number of possible pairwise comparisons delta.e -For each possible comparison, the differential in the effectiveness measure delta.c -For each possible comparison, the differential in the cost measure ICER -The value of the Incremental Cost-Effectiveness Ratio Kmax -The maximum value assumed for the willingness to pay threshold k -The vector of values for the grid approximation of the willingness to pay ceac -The value for the Cost-Effectiveness Acceptability Curve, as a function of the willingness to pay ib-The distribution of the Incremental Benefit, for a given willingness to pay eib- The value for the Expected Incremental Benefit, as a function of the willingness to pay kstar- The grid approximation of the break even point(s) best- A vector containing the numeric label of the intervention that is the most costeffective for each value of the willingness to pay in the selected grid approximation U- An array including the value of the expected utility for each simulation from the Bayesian model, for each value of the grid approximation of the willingness to pay and for each intervention being considered vi -An array including the value of information for each simulation from the Bayesian model and for each value of the grid approximation of the willingness to pay Ustar- An array including the maximum “known-distribution” utility for each simulation from the Bayesian model and for each value of the grid approximation of the willingness to pay ol- An array including the opportunity loss for each simulation from the Bayesian model and for each value of the grid approximation of the willingness to pay evi- The vector of values for the Expected Value of Information, as a function of the willingness to pay interventions- A vector of labels for all the interventions considered ref -The numeric index associated with the intervention used as reference in the analysis comp -The numeric index(es) associated with the intervention(s) used as comparator(s) in the analysis step The step used to form the grid approximation to the willingness to pay\n Other packages Not yet explored. Stated as a functionality of hesim and heemod in their package descriptions: https://cran.r-project.org/web/packages/heemod/heemod.pdf https://cran.r-project.org/web/packages/hesim/hesim.pdf\n Other helpful resources A web-app interface of the R package - https://egon.stats.ucl.ac.uk/projects/BCEAweb/\n  "});index.add({'id':13,'href':'/tags/','title':"Tags",'content':""});})();