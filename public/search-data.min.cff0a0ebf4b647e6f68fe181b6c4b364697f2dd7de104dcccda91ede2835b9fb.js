'use strict';(function(){const indexCfg=;indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/state-transition-models/decision-trees/','title':"Decision Trees",'content':" DECISION TREE PACKAGES Package: data.tree\nmaintained by: Christoph Glur (christoph.glur@ipub.com) (https://cran.r-project.org/web/packages/data.tree/vignettes/data.tree.html#introduction and https://cran.r-project.org/web/packages/data.tree/data.tree.pdf )\n  What does this package do? This package is used to create hierarchical structures through data.tree structures.\n How do I input my data to it/what inputs does it take? This package accepts inputs in a range of formats. Inputs can be from other tree packages (e.g. dendrogram, phylo from ape package and igraph trees). Additionally, data.frames can be used or the trees can be built programatically within the data.tree package. Data.tree can also use data saved in csv, yaml, json formats.\n What outputs do I get? The package produces a tree that you can navigate (‘climb’) and manipulate (e.g. ‘prune’ or ‘filter’) within R. data.tree can plot trees within its own package but can also use other packages to allow for styling of the tree. Other packages might be igraph, treeview, ape. Data from the data.tree can be saved as a data.tree type or as a data.frame and exported as csv, yaml, json\n Sample code library(treemap) data(GNI2014) treemap(GNI2014, index=c(\u0026quot;continent\u0026quot;, \u0026quot;iso3\u0026quot;), vSize=\u0026quot;population\u0026quot;, vColor=\u0026quot;GNI\u0026quot;, type=\u0026quot;value\u0026quot;)  library(data.tree) GNI2014$continent \u0026lt;- as.character(GNI2014$continent) GNI2014$pathString \u0026lt;- paste(\u0026quot;world\u0026quot;, GNI2014$continent, GNI2014$country, sep = \u0026quot;/\u0026quot;) tree \u0026lt;- as.Node(GNI2014[,]) print(tree, pruneMethod = \u0026quot;dist\u0026quot;, limit = 20) ## levelName ## 1 world ## 2 ¦--North America ## 3 ¦ ¦--Bermuda ## 4 ¦ ¦--United States ## 5 ¦ °--... 22 nodes w/ 0 sub ## 6 ¦--Europe ## 7 ¦ ¦--Norway ## 8 ¦ ¦--Switzerland ## 9 ¦ °--... 39 nodes w/ 0 sub ## 10 ¦--Asia ## 11 ¦ ¦--Qatar ## 12 ¦ ¦--Macao SAR, China ## 13 ¦ °--... 45 nodes w/ 0 sub ## 14 ¦--Oceania ## 15 ¦ ¦--Australia ## 16 ¦ ¦--New Zealand ## 17 ¦ °--... 11 nodes w/ 0 sub ## 18 ¦--South America ## 19 ¦ ¦--Uruguay ## 20 ¦ ¦--Chile ## 21 ¦ °--... 10 nodes w/ 0 sub ## 22 ¦--Seven seas (open ocean) ## 23 ¦ ¦--Seychelles ## 24 ¦ ¦--Mauritius ## 25 ¦ °--... 1 nodes w/ 0 sub ## 26 °--Africa ## 27 °--... 48 nodes w/ 0 sub (code example is from Christopher Glur’s https://cran.r-project.org/web/packages/data.tree/vignettes/applications.html#jenny-lind-decision-tree-plotting)   Other helpful resources This site has a range of examples of potential uses for the data.tree package ranging from financial applications to a genetic mutation algorithm (https://cran.r-project.org/web/packages/data.tree/vignettes/applications.html)\n Package: party\nmaintained by: Torsten Hothorn (Torsten.Hothorn@R-project.org)\n(https://cran.r-project.org/web/packages/party/index.html)\n  What does this package do? The core of the Party package is ctree(). Ctree() can be employed to build conditional inference trees. These trees use conditional inference procedures within their tree-structured regression models. Trees can be produced for nominal, ordinal, numeric and censored data, as well as multivariate response variables, and covariates with arbitrary measurement scales.\nThere is also a function called cforest(), which provides an implementation of Breiman’s random forests, based on conditional inference trees. In addition, the function mob() uses parametric models (e.g. linear models, GLMs or survival regression) with parameter instability tests for split selection. Finally, there are useful functions for visualizing trees. To learn more about what the function can do, check out the two comprehensive vignettes.\n How do I input my data to it/what inputs does it take? The input for mob is a dataframe.\n What outputs do I get? The output of mob is an object of class mob.\n Sample code  Other packages ###(not discussed in full) Party was updated in 2015 to the package Partykit, this includes a reimplementation of ctree() and an extended reimplementation of mob(), as well as a variety of other features (https://cran.r-project.org/web/packages/partykit/index.html and http://partykit.r-forge.r-project.org/partykit/).\n Other helpful resources Find out more about party at http://party.r-forge.r-project.org/.\nThere’s also a variety of online support available, for example: - https://rpubs.com/njvijay/14899 - https://www.tutorialspoint.com/r/r_decision_tree.htm - http://www.sthda.com/english/articles/35-statistical-machine-learning-essentials/141-cart-model-decision-tree-essentials/#loading-required-r-packages\n Package: rpart\nmaintained by: Beth Atkinson (atkinson@mayo.edu)\n(https://cran.r-project.org/web/packages/rpart/index.html))\n  What does this package do? This package performs recursive partitioning for classification, regression and survival trees. It implements the functionality in the 1984 book by Breiman, Friedman, Olshen and Stone, Classification and Regression Trees. The package also includes several example sets of data with a long, but clear, vignette.\nRpart or party?\nRpart produces classification and regression trees with cross-validation-based cost-complexity pruning. By contrast, Party produces conditional inference trees based on unbiased recursive partitioning achieved via permutation tests. As a result, RPart is sometimes seen as easier to explain and use for beginners, but Party appears to give greater accuracy and performance.\n How do I input my data to it/what inputs does it take? The input for rpart function in the package is a dataframe or formula.\n What outputs do I get? The rpart function outputs an rpart.object\n Sample code ##Other helpful resources\nAs this is a popular package there is lots of online support, for example:\n https://eight2late.wordpress.com/2016/02/16/a-gentle-introduction-to-decision-trees-using-r/ https://www.r-bloggers.com/classification-trees-using-the-rpart-function/ https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/ https://freakonometrics.hypotheses.org/tag/rpart   Other packages to explore but not detailed here: Make decision trees or networks  Package: igraph maintained by Gábor Csárdi csardi.gabor@gmail.com (https://cran.r-project.org/web/packages/igraph/igraph.pdf)\n Package: tree maintained by Brian Ripley ripley@stats.ox.ac.uk (https://cran.r-project.org/web/packages/tree/index.html)\n Package: RWeka maintained by Kurt Hornik Kurt.Hornik@R-project.org (https://cran.r-project.org/web/packages/RWeka/index.html)\n Package: dtree maintained by Ross Jacobucci rcjacobuc@gmail.com (https://cran.r-project.org/web/packages/dtree/index.html)\n Package: evtree maintained by Thomas Grubinger ThomasGrubinger@gmail.com (https://cran.r-project.org/web/packages/evtree/)\n Package: FFtrees maintained by Nathaniel Phillips Nathaniel.D.Phillips.is@gmail.com (https://cran.rstudio.com/web/packages/FFTrees/index.html)\n Package: C50 maintained by Max Kuhn mxkuhn@gmail.com (https://cran.r-project.org/web/packages/C50/index.html)\n Package: cat.dt maintained by Javier Rodriguez-Cuadrado javierro@est-econ.uc3m.es (https://cran.r-project.org/web/packages/cat.dt/index.html)\n Package: MplusTrees maintained by Safaraz serang sarfaraz.serang@usu.edu\n(https://cran.r-project.org/web/packages/MplusTrees/index.html)\n   Improving presentation of hierarchical clustering, and classification and regression trees  Package: maptree maintained by Robert B. Gramacy rbgramacy@chicagobooth.edu\n(https://cran.r-project.org/web/packages/maptree/maptree.pdf)   Convert JSON objects to R  Package: jsonlite maintained by Jeroen Ooms jeroen@berkeley.edu (https://cran.r-project.org/web/packages/jsonlite/index.html)\n Package: rjson maintained by Alex Couture-Beil rjson_pkg@mofo.ca (https://cran.r-project.org/web/packages/rjson/rjson.pdf)\n   Validate JSON objects  Package: jsonvalidate maintained by Rich FitzJohn rich.fitzjohn@gmail.com (https://cran.r-project.org/web/packages/jsonvalidate/jsonvalidate.pdf)     "});index.add({'id':1,'href':'/docs/state-transition-models/markov-models/','title':"Markov Models",'content':" Markov Models Package: heemod\nmaintained by: Kevin Zarca kevin.zarca@gmail.com ( https://cran.r-project.org/web/packages/heemod/heemod.pdf and https://cran.r-project.org/web/packages/heemod/index.html)\nWhat does this package do? It constructs and runs Markov models for the purpose of health economic decision analysis.\nIt also has useful functions that could be used outside of a different Markov model framework. Such as Nb also has useful functions like rate_to_prob() and or_to_prob(or, p) that convert rates and odds ratios into transition probabilities. This package seems useful for when there are the same states across the strategy comparators.\nFurther functionality was not explored currently within this exercise. However, the package description also states the package allows for deterministic and probabilistic sensitivity analysis, heterogeneity analysis, time dependency on state-time and model-time (semi-Markov and non-homogeneous Markov models).\nHow do I input my data to it/what inputs does it take? Users directly input values into vectors that are run through different functions\nWhat outputs do I get? In terms of cost-effectiveness analysis, run_model() gives you an R object which includes outputs like a data.frame showing expected value costs and effects for each strategy\nSample code Other helpful resources  Vignettes for this package were found at:\nhttps://cran.r-project.org/web/packages/heemod/vignettes/a_introduction.html Markov Models for Health Economic Evaluations: The R Package heemod Antoine Filipovi´c-Pierucci, Kevin Zarca and Isabelle Durand-Zaleski (2017). (https://arxiv.org/pdf/1702.03252.pdf )  Other packages to explore but not detailed here:  DARTH : have information on github but nothing on CRAN at present.\nThe packages include: -Darthpack (https://darth-git.github.io/darthpack/) -dampack (https://github.com/DARTH-git/dampack) mstate (https://cran.r-project.org/web/packages/mstate/index.html)  "});index.add({'id':2,'href':'/docs/sensitivity-analyses-and-value-of-information/','title':"Sensitivity Analyses and Value of Information",'content':" Sensitivity Analyses and Value of Information Models are used to inform decision making and resource allocation in health care, therefore, it is important that they report point estimates for specific outcomes as well as the uncertainty surrounding these outcomes. Modellers can perform sensitivity analyses (deterministic (DSA) or probabilistic (PSA)) to report on the uncertainty of their models’ outcomes, or value of information analysis (VOI) to assess the expected gain from reducing uncertainty through some form of data collection (trial, epidemiological study, etc.). More information on parameter estimation, uncertainty, sensitivity anlyses, VOIs can be found in the following publications:\nhttps://www.ispor.org/docs/default-source/resources/outcomes-research-guidelines-index/model_parameter_estimation_and_uncertainty-6.pdf?sfvrsn=8bc10c8e_0 https://link.springer.com/article/10.1007/s40273-014-0219-x  Useful examples of R sources which can be used to perform sensitivity analyses and VOI can be found here:\nSAVI - Sheffield Accelerated Value of Information SAVI can be used to evaluate uncertainty in a standardised manner (C-E (cost-effectiveness) planes, cost-effectiveness acceptability curves (CEACs), as well as assess the expected value of perfect information (EVPI) and expected value of perfect parameter information (EVPPI) Webpage: http://savi.shef.ac.uk/SAVI/ GitHub: https://github.com/Sheffield-Accelerated-VoI/SAVI\n RANE - Rapid Assessment of Need for Evidence RANE is a tool which can be used to estimate the value of research proposals. Webpage: https://shiny.york.ac.uk/rane/ GitHub: https://github.com/david-glynn https://github.com/david-glynn/OpenVOIdemo.v.0.1\n   "});index.add({'id':3,'href':'/docs/state-transition-models/','title':"State Transmission Models",'content':" State Transmission Models "});index.add({'id':4,'href':'/categories/','title':"Categories",'content':""});index.add({'id':5,'href':'/docs/discrete-event-simulation/','title':"Discrete Event Simulation",'content':" Discrete Event Simulation plot(cars, pch = 20) # not really cool  Figure 1: A cool plot.   "});index.add({'id':6,'href':'/docs/','title':"Docs",'content':""});index.add({'id':7,'href':'/docs/dynamic-transmission-models/','title':"Dynamic Transmission Models",'content':""});index.add({'id':8,'href':'/','title':"Introduction",'content':" Signposting Health Economic Packages in R for Decision Modelling  \n"});index.add({'id':9,'href':'/docs/parameter-estimation-and-uncertainty/','title':"Parameter Estimation and Uncertainty",'content':""});index.add({'id':10,'href':'/tags/','title':"Tags",'content':""});})();